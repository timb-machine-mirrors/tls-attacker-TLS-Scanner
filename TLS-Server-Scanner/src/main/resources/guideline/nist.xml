<guideline>
    <name>NIST SP 800-52r2</name>
    <link>https://doi.org/10.6028/NIST.SP.800-52r2</link>
    <analyzedPropertyGuidelineCheck>
        <name>Servers should support TLS 1.3 and shall support TLS 1.3 by January 1, 2024.</name>
        <requirementLevel>MUST</requirementLevel>
        <property>SUPPORTS_TLS_1_3</property>
        <result>TRUE</result>
    </analyzedPropertyGuidelineCheck>
    <analyzedPropertyGuidelineCheck>
        <name>Servers shall support TLS 1.2.</name>
        <requirementLevel>MUST</requirementLevel>
        <property>SUPPORTS_TLS_1_2</property>
        <result>TRUE</result>
    </analyzedPropertyGuidelineCheck>
    <analyzedPropertyGuidelineCheck>
        <name>Support of TLS 1.1 is discouraged.</name>
        <requirementLevel>MAY</requirementLevel>
        <property>SUPPORTS_TLS_1_1</property>
        <result>FALSE</result>
    </analyzedPropertyGuidelineCheck>
    <analyzedPropertyGuidelineCheck>
        <name>Support of TLS 1.0 is discouraged.</name>
        <requirementLevel>MAY</requirementLevel>
        <property>SUPPORTS_TLS_1_0</property>
        <result>FALSE</result>
    </analyzedPropertyGuidelineCheck>
    <analyzedPropertyGuidelineCheck>
        <name>Servers shall not support SSL 3.0.</name>
        <requirementLevel>MUST</requirementLevel>
        <property>SUPPORTS_SSL_3</property>
        <result>FALSE</result>
    </analyzedPropertyGuidelineCheck>
    <analyzedPropertyGuidelineCheck>
        <name>Servers shall not support SSL 2.0.</name>
        <requirementLevel>MUST</requirementLevel>
        <property>SUPPORTS_SSL_2</property>
        <result>FALSE</result>
    </analyzedPropertyGuidelineCheck>
    <certificateAgilityGuidelineCheck>
        <name>Should support the use of multiple server certificates with their associated private keys to support algorithm and key size agility.</name>
        <requirementLevel>SHOULD</requirementLevel>
    </certificateAgilityGuidelineCheck>
    <signatureAlgorithmsTypeCertificateGuidelineCheck>
        <name>Shall be configured with an RSA signature certificate or an ECDSA signature certificate.</name>
        <requirementLevel>MUST</requirementLevel>
        <atLeastOneCertificateShallPass>true</atLeastOneCertificateShallPass>
        <recommendedAlgorithms>RSA_PKCS1</recommendedAlgorithms>
        <recommendedAlgorithms>RSA_SSA_PSS</recommendedAlgorithms>
        <recommendedAlgorithms>ECDSA</recommendedAlgorithms>
    </signatureAlgorithmsTypeCertificateGuidelineCheck>
    <certificateCurveGuidelineCheck>
        <name>For ECDSA: Curve P-256 or curve P-384 should be used in the public key.</name>
        <requirementLevel>SHOULD</requirementLevel>
        <atLeastOneCertificateShallPass>false</atLeastOneCertificateShallPass>
        <recommendedNamedParameters>SECP256R1</recommendedNamedParameters>
        <recommendedNamedParameters>SECP384R1</recommendedNamedParameters>
    </certificateCurveGuidelineCheck>
    <analyzedPropertyGuidelineCheck>
        <name>Certificates shall be issued by a CA that publishes revocation information in OCSP responses.</name>
        <requirementLevel>MUST</requirementLevel>
        <property>SUPPORTS_OCSP</property>
        <result>TRUE</result>
    </analyzedPropertyGuidelineCheck>
    <certificateVersionGuidelineCheck>
        <name>Server certificate shall be an X.509 version 3 certificate.</name>
        <requirementLevel>MUST</requirementLevel>
        <atLeastOneCertificateShallPass>false</atLeastOneCertificateShallPass>
        <version>V3</version>
    </certificateVersionGuidelineCheck>
    <keySizeCertGuidelineCheck>
        <name>All server and client certificates shall contain public keys that offer at least 112 bits of security.</name>
        <requirementLevel>MUST</requirementLevel>
        <atLeastOneCertificateShallPass>false</atLeastOneCertificateShallPass>
        <minimumDsaKeyLength>2048</minimumDsaKeyLength>
        <minimumRsaKeyLength>2048</minimumRsaKeyLength>
        <minimumEcKeyLength>224</minimumEcKeyLength>
        <minimumDhKeyLength>2048</minimumDhKeyLength>
    </keySizeCertGuidelineCheck>
    <certificateSignatureCheck>
        <name>If the server supports TLS versions prior to TLS 1.2, the certificate should be signed with an algorithm consistent with the public key.</name>
        <requirementLevel>SHOULD</requirementLevel>
        <condition>
            <or>
                <condition>
                    <property>SUPPORTS_TLS_1_0</property>
                    <result>TRUE</result>
                </condition>
                <condition>
                    <property>SUPPORTS_TLS_1_1</property>
                    <result>TRUE</result>
                </condition>
            </or>
        </condition>
        <atLeastOneCertificateShallPass>false</atLeastOneCertificateShallPass>
    </certificateSignatureCheck>
    <certificateValidityGuidelineCheck>
        <name>Certificate validity period should be 3 years or less.</name>
        <requirementLevel>SHOULD</requirementLevel>
        <atLeastOneCertificateShallPass>false</atLeastOneCertificateShallPass>
        <days>1095</days>
    </certificateValidityGuidelineCheck>
    <certificateNameGuidelineCheck>
        <name>Issuer Distinguished Name (DN): A single value should be encoded in each Relative Distinguished Name (RDN). All attributes that are of DirectoryString type should be encoded as a PrintableString. [...] Subject Distinguished Name: A single value should be encoded in each RDN. All attributes that are of DirectoryString type should be encoded as a PrintableString. If present, the CN attribute should be of the form: CN={host IP address | host DNS name}</name>
        <requirementLevel>SHOULD</requirementLevel>
        <atLeastOneCertificateShallPass>false</atLeastOneCertificateShallPass>
    </certificateNameGuidelineCheck>
    <keyUsageCertificateCheck>
        <name>Key Usage extension should be used with "digitalSignature" and "keyAgreement" values.</name>
        <requirementLevel>SHOULD</requirementLevel>
        <atLeastOneCertificateShallPass>false</atLeastOneCertificateShallPass>
    </keyUsageCertificateCheck>
    <extendedKeyUsageCertificateCheck>
        <name>Servers should be configured to allow use of the Extended Key Usage extension with a key purpose specifically for server authentication.</name>
        <requirementLevel>SHOULD</requirementLevel>
        <atLeastOneCertificateShallPass>false</atLeastOneCertificateShallPass>
    </extendedKeyUsageCertificateCheck>
    <cipherSuiteGuidelineCheck>
        <name>Only listed cipher suites shall be used.</name>
        <requirementLevel>MUST</requirementLevel>
        <versions>TLS10</versions>
        <versions>TLS11</versions>
        <versions>TLS12</versions>
        <recommendedCipherSuites>TLS_RSA_WITH_AES_128_CCM</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_RSA_WITH_AES_256_CCM</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_RSA_WITH_AES_128_CCM_8</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_RSA_WITH_AES_256_CCM_8</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_RSA_WITH_AES_128_CBC_SHA</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_RSA_WITH_AES_256_CBC_SHA</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_RSA_WITH_AES_128_CBC_SHA256</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_RSA_WITH_AES_256_CBC_SHA256</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_RSA_WITH_AES_128_GCM_SHA256</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_RSA_WITH_AES_256_GCM_SHA384</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_ECDHE_ECDSA_WITH_AES_128_CCM</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_ECDHE_ECDSA_WITH_AES_256_CCM</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_ECDHE_ECDSA_WITH_AES_256_CCM_8</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_DHE_RSA_WITH_AES_128_GCM_SHA256</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_DHE_RSA_WITH_AES_256_GCM_SHA384</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_DHE_RSA_WITH_AES_128_CCM</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_DHE_RSA_WITH_AES_256_CCM</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_DHE_RSA_WITH_AES_128_CCM_8</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_DHE_RSA_WITH_AES_256_CCM_8</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_DHE_RSA_WITH_AES_128_CBC_SHA256</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_DHE_RSA_WITH_AES_256_CBC_SHA256</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_DHE_RSA_WITH_AES_128_CBC_SHA</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_DHE_RSA_WITH_AES_256_CBC_SHA</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_DHE_DSS_WITH_AES_128_GCM_SHA256</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_DHE_DSS_WITH_AES_256_GCM_SHA384</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_DHE_DSS_WITH_AES_128_CBC_SHA256</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_DHE_DSS_WITH_AES_256_CBC_SHA256</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_DHE_DSS_WITH_AES_128_CBC_SHA</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_DHE_DSS_WITH_AES_256_CBC_SHA</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_DH_DSS_WITH_AES_128_GCM_SHA256</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_DH_DSS_WITH_AES_256_GCM_SHA384</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_DH_DSS_WITH_AES_128_CBC_SHA256</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_DH_DSS_WITH_AES_256_CBC_SHA256</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_DH_DSS_WITH_AES_128_CBC_SHA</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_DH_DSS_WITH_AES_256_CBC_SHA</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_DH_RSA_WITH_AES_128_GCM_SHA256</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_DH_RSA_WITH_AES_256_GCM_SHA384</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_DH_RSA_WITH_AES_128_CBC_SHA256</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_DH_RSA_WITH_AES_256_CBC_SHA256</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_DH_RSA_WITH_AES_128_CBC_SHA</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_DH_RSA_WITH_AES_256_CBC_SHA</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_ECDH_RSA_WITH_AES_128_CBC_SHA</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_ECDH_RSA_WITH_AES_256_CBC_SHA</recommendedCipherSuites>
    </cipherSuiteGuidelineCheck>
    <cipherSuiteGuidelineCheck>
        <name>Only listed cipher suites shall be used for TLS 1.3.</name>
        <requirementLevel>MUST</requirementLevel>
        <versions>TLS13</versions>
        <recommendedCipherSuites>TLS_AES_128_GCM_SHA256</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_AES_256_GCM_SHA384</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_AES_128_CCM_SHA256</recommendedCipherSuites>
        <recommendedCipherSuites>TLS_AES_128_CCM_8_SHA256</recommendedCipherSuites>
    </cipherSuiteGuidelineCheck>
    <analyzedPropertyGuidelineCheck>
        <name>Servers shall not be vulnerable to padding oracle.</name>
        <requirementLevel>MUST</requirementLevel>
        <property>VULNERABLE_TO_PADDING_ORACLE</property>
        <result>FALSE</result>
    </analyzedPropertyGuidelineCheck>
    <analyzedPropertyGuidelineCheck>
        <name>The random number generator should be used to generate the 4-byte timestamp of the server random value.</name>
        <requirementLevel>SHOULD</requirementLevel>
        <property>USES_UNIX_TIMESTAMPS_IN_RANDOM</property>
        <result>FALSE</result>
    </analyzedPropertyGuidelineCheck>
    <hashAlgorithmStrengthCheck>
        <name>All server and client certificates and certificates in their certification paths shall be signed using SHA-224 or a stronger hashing algorithm.</name>
        <requirementLevel>MUST</requirementLevel>
        <atLeastOneCertificateShallPass>false</atLeastOneCertificateShallPass>
        <minimumStrength>SHA224</minimumStrength>
    </hashAlgorithmStrengthCheck>
    <analyzedPropertyGuidelineCheck>
        <name>The server shall support Secure Renegotiation extension.</name>
        <requirementLevel>MUST</requirementLevel>
        <condition>
            <or>
                <condition>
                    <property>SUPPORTS_TLS_1_0</property>
                    <result>TRUE</result>
                </condition>
                <condition>
                    <property>SUPPORTS_TLS_1_1</property>
                    <result>TRUE</result>
                </condition>
                <condition>
                    <property>SUPPORTS_TLS_1_2</property>
                    <result>TRUE</result>
                </condition>
            </or>
        </condition>
        <property>SUPPORTS_SECURE_RENEGOTIATION_EXTENSION</property>
        <result>TRUE</result>
    </analyzedPropertyGuidelineCheck>
    <extensionGuidelineCheck>
        <name>The server shall be able to process and respond to the Server Name Indication extension.</name>
        <requirementLevel>MUST</requirementLevel>
        <requiredExtension>SERVER_NAME_INDICATION</requiredExtension>
    </extensionGuidelineCheck>
    <analyzedPropertyGuidelineCheck>
        <name>Extended Master Secret extension shall be supported.</name>
        <requirementLevel>MUST</requirementLevel>
        <condition>
            <or>
                <condition>
                    <property>SUPPORTS_TLS_1_0</property>
                    <result>TRUE</result>
                </condition>
                <condition>
                    <property>SUPPORTS_TLS_1_1</property>
                    <result>TRUE</result>
                </condition>
                <condition>
                    <property>SUPPORTS_TLS_1_2</property>
                    <result>TRUE</result>
                </condition>
            </or>
        </condition>
        <property>SUPPORTS_EXTENDED_MASTER_SECRET</property>
        <result>TRUE</result>
    </analyzedPropertyGuidelineCheck>
    <analyzedPropertyGuidelineCheck>
        <name>Servers shall support the processing of the signature algorithms extension received in a ClientHello message.</name>
        <requirementLevel>MUST</requirementLevel>
        <condition>
            <or>
                <condition>
                    <property>SUPPORTS_TLS_1_2</property>
                    <result>TRUE</result>
                </condition>
                <condition>
                    <property>SUPPORTS_TLS_1_3</property>
                    <result>TRUE</result>
                </condition>
            </or>
        </condition>
        <property>IGNORES_OFFERED_SIG_HASH_ALGOS</property>
        <result>TRUE</result>
    </analyzedPropertyGuidelineCheck>
    <analyzedPropertyGuidelineCheck>
        <name>Certificate Status Request extension shall be supported.</name>
        <requirementLevel>MUST</requirementLevel>
        <property>SUPPORTS_CERTIFICATE_STATUS_REQUEST</property>
        <result>TRUE</result>
    </analyzedPropertyGuidelineCheck>
    <analyzedPropertyGuidelineCheck>
        <name>The Fallback Signaling Cipher Suite Value (SCSV) shall be supported if the server supports versions of TLS prior to TLS 1.2 and does not support TLS 1.3.</name>
        <requirementLevel>MUST</requirementLevel>
        <condition>
            <and>
                <condition>
                    <or>
                        <condition>
                            <property>SUPPORTS_TLS_1_0</property>
                            <result>TRUE</result>
                        </condition>
                        <condition>
                            <property>SUPPORTS_TLS_1_1</property>
                            <result>TRUE</result>
                        </condition>
                    </or>
                </condition>
                <condition>
                    <property>SUPPORTS_TLS_1_3</property>
                    <result>FALSE</result>
                </condition>
            </and>
        </condition>
        <property>SUPPORTS_TLS_FALLBACK_SCSV</property>
        <result>TRUE</result>
    </analyzedPropertyGuidelineCheck>
    <namedGroupsGuidelineCheck>
        <name>When elliptic curve cipher suites are configured, at least one of the NIST-approved curves, P-256 (secp256r1) and P-384 (secp384r1), shall be supported as described in RFC 8422. Additional NIST-recommended elliptic curves are listed in SP 800-56A, Appendix D. Finite field groups that are approved for TLS in SP 800-56A, Appendix D may be supported.</name>
        <requirementLevel>MUST</requirementLevel>
        <condition>
            <or>
                <condition>
                    <property>SUPPORTS_ECDHE</property>
                    <result>TRUE</result>
                </condition>
                <condition>
                    <property>SUPPORTS_TLS_1_3</property>
                    <result>TRUE</result>
                </condition>
            </or>
        </condition>
        <recommendedGroups>SECP224R1</recommendedGroups>
        <recommendedGroups>SECP256R1</recommendedGroups>
        <recommendedGroups>SECP384R1</recommendedGroups>
        <recommendedGroups>SECP521R1</recommendedGroups>
        <recommendedGroups>SECT233K1</recommendedGroups>
        <recommendedGroups>SECT283K1</recommendedGroups>
        <recommendedGroups>SECT409K1</recommendedGroups>
        <recommendedGroups>SECT571K1</recommendedGroups>
        <recommendedGroups>SECT233R1</recommendedGroups>
        <recommendedGroups>SECT283R1</recommendedGroups>
        <recommendedGroups>SECT409R1</recommendedGroups>
        <recommendedGroups>SECT571R1</recommendedGroups>
        <recommendedGroups>FFDHE2048</recommendedGroups>
        <recommendedGroups>FFDHE3072</recommendedGroups>
        <recommendedGroups>FFDHE4096</recommendedGroups>
        <recommendedGroups>FFDHE6144</recommendedGroups>
        <recommendedGroups>FFDHE8192</recommendedGroups>
        <requiredGroups>SECP256R1</requiredGroups>
        <requiredGroups>SECP384R1</requiredGroups>
        <tls13>false</tls13>
        <minGroupCount>2</minGroupCount>
    </namedGroupsGuidelineCheck>
    <extensionGuidelineCheck>
        <name>The Key Share extension shall be supported if the server supports TLS 1.3.</name>
        <requirementLevel>MUST</requirementLevel>
        <condition>
            <property>SUPPORTS_TLS_1_3</property>
            <result>TRUE</result>
        </condition>
        <requiredExtension>KEY_SHARE</requiredExtension>
    </extensionGuidelineCheck>
    <extensionGuidelineCheck>
        <name>The EC Point Format extension shall be supported if the server supports EC cipher suites.</name>
        <requirementLevel>MUST</requirementLevel>
        <condition>
            <and>
                <condition>
                    <or>
                        <condition>
                            <property>SUPPORTS_TLS_1_0</property>
                            <result>TRUE</result>
                        </condition>
                        <condition>
                            <property>SUPPORTS_TLS_1_1</property>
                            <result>TRUE</result>
                        </condition>
                        <condition>
                            <property>SUPPORTS_TLS_1_2</property>
                            <result>TRUE</result>
                        </condition>
                    </or>
                </condition>
                <condition>
                    <property>SUPPORTS_STATIC_ECDH</property>
                    <result>TRUE</result>
                </condition>
            </and>
        </condition>
        <requiredExtension>EC_POINT_FORMATS</requiredExtension>
    </extensionGuidelineCheck>
    <analyzedPropertyGuidelineCheck>
        <name>The Multiple Certificate Status extension should be supported if status information for the server's certificate is available via OCSP and the extension is supported by the server implementation.</name>
        <requirementLevel>SHOULD</requirementLevel>
        <condition>
            <and>
                <condition>
                    <or>
                        <condition>
                            <property>SUPPORTS_TLS_1_0</property>
                            <result>TRUE</result>
                        </condition>
                        <condition>
                            <property>SUPPORTS_TLS_1_1</property>
                            <result>TRUE</result>
                        </condition>
                        <condition>
                            <property>SUPPORTS_TLS_1_2</property>
                            <result>TRUE</result>
                        </condition>
                    </or>
                </condition>
                <condition>
                    <property>SUPPORTS_OCSP</property>
                    <result>TRUE</result>
                </condition>
            </and>
        </condition>
        <property>SUPPORTS_CERTIFICATE_STATUS_REQUEST_V2</property>
        <result>TRUE</result>
    </analyzedPropertyGuidelineCheck>
    <analyzedPropertyGuidelineCheck>
        <name>The Encrypt-then-MAC extension shall be supported if the server is configured to negotiate CBC cipher suites.</name>
        <requirementLevel>MUST</requirementLevel>
        <condition>
            <and>
                <condition>
                    <or>
                        <condition>
                            <property>SUPPORTS_TLS_1_0</property>
                            <result>TRUE</result>
                        </condition>
                        <condition>
                            <property>SUPPORTS_TLS_1_1</property>
                            <result>TRUE</result>
                        </condition>
                        <condition>
                            <property>SUPPORTS_TLS_1_2</property>
                            <result>TRUE</result>
                        </condition>
                    </or>
                </condition>
                <condition>
                    <property>SUPPORTS_BLOCK_CIPHERS</property>
                    <result>TRUE</result>
                </condition>
            </and>
        </condition>
        <property>SUPPORTS_ENCRYPT_THEN_MAC</property>
        <result>TRUE</result>
    </analyzedPropertyGuidelineCheck>
    <analyzedPropertyGuidelineCheck>
        <name>The Pre-Shared Key Exchange Modes extension shall be supported if the server supports TLS 1.3 and the Pre-Shared Key extension.</name>
        <requirementLevel>MUST</requirementLevel>
        <condition>
            <and>
                <condition>
                    <or>
                        <condition>
                            <property>SUPPORTS_TLS13_PSK</property>
                            <result>TRUE</result>
                        </condition>
                        <condition>
                            <property>SUPPORTS_TLS13_PSK_DHE</property>
                            <result>TRUE</result>
                        </condition>
                    </or>
                </condition>
                <condition>
                    <property>SUPPORTS_TLS_1_3</property>
                    <result>TRUE</result>
                </condition>
            </and>
        </condition>
        <property>SUPPORTS_TLS13_PSK_EXCHANGE_MODES</property>
        <result>TRUE</result>
    </analyzedPropertyGuidelineCheck>
    <extensionGuidelineCheck>
        <name>The Supported Versions extension shall be supported if the server supports TLS 1.3.</name>
        <requirementLevel>MUST</requirementLevel>
        <condition>
            <property>SUPPORTS_TLS_1_3</property>
            <result>TRUE</result>
        </condition>
        <requiredExtension>SUPPORTED_VERSIONS</requiredExtension>
    </extensionGuidelineCheck>
    <extensionGuidelineCheck>
        <name>Servers that support TLS 1.3 may support the Cookie extension.</name>
        <requirementLevel>MAY</requirementLevel>
        <condition>
            <property>SUPPORTS_TLS_1_3</property>
            <result>TRUE</result>
        </condition>
        <requiredExtension>COOKIE</requiredExtension>
    </extensionGuidelineCheck>
    <analyzedPropertyGuidelineCheck>
        <name>The Signed Certificate Timestamps extension should be supported if the server's certificate was issued by a publicly trusted CA and the certificate does not include a Signed Certificate Timestamps List extension.</name>
        <requirementLevel>SHOULD</requirementLevel>
        <condition>
            <property>SUPPORTS_SCTS_PRECERTIFICATE</property>
            <result>FALSE</result>
        </condition>
        <property>SUPPORTS_SCTS_HANDSHAKE</property>
        <result>TRUE</result>
    </analyzedPropertyGuidelineCheck>
    <analyzedPropertyGuidelineCheck>
        <name>Servers should not process early data received in the ClientHello message.</name>
        <requirementLevel>SHOULD</requirementLevel>
        <condition>
            <property>SUPPORTS_TLS_1_3</property>
            <result>TRUE</result>
        </condition>
        <property>SUPPORTS_TLS13_0_RTT</property>
        <result>FALSE</result>
    </analyzedPropertyGuidelineCheck>
    <analyzedPropertyGuidelineCheck>
        <name>The Client Certificate URL extension should not be supported.</name>
        <requirementLevel>SHOULD_NOT</requirementLevel>
        <condition>
            <or>
                <condition>
                    <property>SUPPORTS_TLS_1_0</property>
                    <result>TRUE</result>
                </condition>
                <condition>
                    <property>SUPPORTS_TLS_1_1</property>
                    <result>TRUE</result>
                </condition>
                <condition>
                    <property>SUPPORTS_TLS_1_2</property>
                    <result>TRUE</result>
                </condition>
            </or>
        </condition>
        <property>SUPPORTS_CLIENT_CERTIFICATE_URL</property>
        <result>TRUE</result>
    </analyzedPropertyGuidelineCheck>
    <analyzedPropertyGuidelineCheck>
        <name>If the server does allow 0-RTT data, then the server should use the single-use ticket mechanism.</name>
        <requirementLevel>SHOULD</requirementLevel>
        <condition>
            <property>SUPPORTS_TLS13_0_RTT</property>
            <result>TRUE</result>
        </condition>
        <property>REUSABLE_TICKET</property>
        <result>FALSE</result>
    </analyzedPropertyGuidelineCheck>
    <analyzedPropertyGuidelineCheck>
        <name>The Raw Public Key extension shall not be supported.</name>
        <requirementLevel>MUST_NOT</requirementLevel>
        <property>SUPPORTS_RAW_PUBLIC_KEY_CERTIFICATES</property>
        <result>TRUE</result>
    </analyzedPropertyGuidelineCheck>
    <analyzedPropertyGuidelineCheck>
        <name>The null compression method shall be enabled, and all other compression methods shall be disabled.</name>
        <requirementLevel>MUST</requirementLevel>
        <property>SUPPORTS_TLS_COMPRESSION</property>
        <result>FALSE</result>
    </analyzedPropertyGuidelineCheck>
</guideline>
